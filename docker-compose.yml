version: "3.8"
services:

  nodered:
    image: nodered/node-red
    container_name: node-red
    networks:
      mynet:
        ipv4_address: 10.5.0.2
    environment:
    - SERVICE_NAME=node-red
    ports:
    - "1880:1880"
    volumes:
    - ./node-red/data:/data
    links:
    - mosquitto

  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    expose:
      - "1883"
      - "9001"
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config/:/mosquitto/config/
      - ./mosquitto/log/:/mosquitto/log/
      - ./mosquitto/data:/mosquitto/data/
    networks:
      mynet:
        ipv4_address: 10.5.0.3

  crate:
    image: crate
    hostname: crate
    container_name: crate
    environment:
      - CRATE_HEAP_SIZE=1g
    command: ["crate", "-Cnode.store.allow_mmap=false"]
    ports:
      - 4200:4200
    volumes:
      - ./crate/data:/data
      - ./crate/blobs:/blobs
      - ./crate/log:/log
    networks:
      mynet:
        ipv4_address: 10.5.0.4

  grafana:
    image: grafana/grafana
    hostname: grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      mynet:
        ipv4_address: 10.5.0.5

  postgres-odoo:
    image: postgres:10
    hostname: postgres-odoo
    container_name: postgres-odoo
    restart: always
    ports:
      - 5444:5432
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_DB=postgres
    volumes:
      - ./postgres-odoo/data:/var/lib/postgresql/data
    networks:
      mynet:
        ipv4_address: 10.5.0.6

  odoo:
    image: odoo:14.0
    hostname: odoo
    container_name: odoo
    ports:
      - 8069:8069
      - 8181:8080
    environment: 
      -  HOST=postgres-odoo
      -  PORT=5432
      -  USER=odoo
      -  PASSWORD=odoo
    volumes:
      - ./odoo/extra-addons:/mnt/extra-addons
      - ./odoo/data:/var/lib/odoo
    depends_on:
      - postgres-odoo
    networks:
      mynet:
        ipv4_address: 10.5.0.7

networks:
  mynet:
      # use the bridge driver, but enable IPv6
      driver: bridge
      driver_opts:
          com.docker.network.enable_ipv6: "true"
      ipam:
        config:
          - subnet: 10.5.0.0/24
            gateway: 10.5.0.1